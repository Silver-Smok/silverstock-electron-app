name: Electron forge build/release
run-name: build-release
on:
  # release:
    # type: [published]
  workflow_dispatch:
  
jobs:
  release-electron-application:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-13-xlarge, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        run: git checkout ${{  github.ref_name }}

      - name: Install Node.js and NPM
        uses: actions/setup-node@v3
        with:
          node-version: "21"

      - name: Add MacOS Certificate
        if: ${{ matrix.os == 'macos-13-xlarge' }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_DATA}}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          P12_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
    
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
    
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Install dependencies
        run: npm ci

      - name: Publish Electron App release
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_IDENTITY: ${{ secrets.APPLE_IDENTITY }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GITHUB_TOKEN: ${{ secrets.github_token }}
          DEBUG: "*"
        run: npm run publish
